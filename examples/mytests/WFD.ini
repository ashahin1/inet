[General]
network = inet.examples.mytests.WFDNetwork
description = Wi-Fi Direct Simulation
sim-time-limit = 20min
#cmdenv-express-mode = true

# random
num-rngs = 3
*.device[*].mobility.rng-0 = 1
*.device[*].wlan[*].mac.rng-0 = 2

#Basic Config
*.deviceCount = 5
*.configurator.config = xml("<config><interface hosts='**' names='wlan0' address='1.x.x.x' netmask='255.0.0.0' add-static-route='false' add-default-route='false' add-subnet-route='false'/><interface hosts='**' names='wlan1' address='192.x.x.x' netmask='255.x.x.x' add-static-route='false' add-default-route='false' add-subnet-route='false'/></config>")
*.configurator.addDefaultRoutes = false
*.configurator.addStaticRoutes = false
*.configurator.addSubnetRoutes = false
**.hasStatus = true
#**.scenarioManager.script = xmldoc("scenario.xml")

# mobility
#-------------------
#**.device*.mobilityType = "MassMobility"
#**.device*.mobility.initFromDisplayString = false
#**.device*.mobility.changeInterval = truncnormal(2s, 0.5s)
#**.device*.mobility.changeAngleBy = normal(0deg, 30deg)
#**.device*.mobility.speed = truncnormal(20mps, 8mps)
#**.device*.mobility.updateInterval = 100ms

#**.device*.mobilityType = "StaticGridMobility"
#**.device*.mobility.numHosts = 5
#**.device*.mobility.marginX = 50m
#**.device*.mobility.marginY = 50m

#Deployment Area
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 500m
**.constraintAreaMaxY = 500m
**.constraintAreaMaxZ = 0m

# wireless configuration
**.wlan[*].bitrate = 54Mbps
#**.wlan[*].agent.startingTime = 5s
**.wlan[*].agent.activeScan = true
#**.wlan[*].agent.default_ssid = "DIRECT-XXXXXXXX"
**.wlan[*].agent.channelsToScan = ""  # "" means all
#**.wlan[*].agent.probeDelay = 2s
**.wlan[*].agent.minChannelTime = 0.15s
**.wlan[*].agent.maxChannelTime = 0.3s
**.wlan[*].agent.authenticationTimeout = 5s
**.wlan[*].agent.associationTimeout = 5s

#Radio&MAC
#*.mediumType = "Ieee80211RadioMedium"
#*.device*.wlan[*].radioType = "Ieee80211IdealRadio"
#*.radioMedium.analogModelType = "ScalarAnalogModel"
#*.radioMedium.backgroundNoiseType = "IsotropicScalarBackgroundNoise"
#*.device*.wlan[*].typename = "IdealWirelessNic"
#*.device*.wlan[*].mac.useAck = false
#*.device*.wlan[*].mac.fullDuplex = false
#*.mediumType = "Ieee80211DimensionalRadioMedium"
#*.device*.wlan[*].radioType = "Ieee80211DimensionalRadio"
#*.device*.wlan[*].radio.transmitter.power = 0.4mW
#*.device*.wlan[*].radio.transmitter.communicationRange = 200m
#*.device*.wlan[*].radio.receiver.ignoreInterference = true
*.device*.wlan[0].radio.displayCommunicationRange = true
#*.device*.wlan[*].radio.displayInterferenceRange = true

#Power Config
*.device*.wlan[*].radio.energyConsumerType = "StateBasedEnergyConsumer"
*.device*.wlan[*].radio.energyConsumer.offPowerConsumption = 0mW
*.device*.wlan[*].radio.energyConsumer.sleepPowerConsumption = 1mW
*.device*.wlan[*].radio.energyConsumer.switchingPowerConsumption = 1mW
*.device*.wlan[*].radio.energyConsumer.receiverIdlePowerConsumption = 2mW
*.device*.wlan[*].radio.energyConsumer.receiverBusyPowerConsumption = 5mW
*.device*.wlan[*].radio.energyConsumer.receiverReceivingPowerConsumption = 10mW
*.device*.wlan[*].radio.energyConsumer transmitterIdlePowerConsumption = 2mW
*.device*.wlan[*].radio.energyConsumer.transmitterTransmittingPowerConsumption = 100mW

#Battery
*.device*.energyStorageType = "SimpleEnergyStorage"
*.device*.energyStorage.nominalCapacity = 8000J
*.device*.energyStorage.initialCapacity = uniform(0.5 *  this.nominalCapacity, this.nominalCapacity)

#*.device*.energyGeneratorType = "AlternatingEnergyGenerator"
#*.device*.energyGenerator.powerGeneration = 1mW
#*.device*.energyGenerator.sleepInterval = exponential(100s)
#*.device*.energyGenerator.generationInterval = exponential(100s)

#UDP Apps
**.numUdpApps = 3
# UDPWFDServiceDiscovery -- Main protocol app
**.udpApp[0].typename = "UDPWFDServiceDiscovery"
**.udpApp[0].messageLength = 100B
**.udpApp[0].startTime = uniform(0ms, 500ms)
**.udpApp[0].sendInterval = 5s
**.udpApp[0].declareGoPeriod = this.sendInterval * 2
**.udpApp[0].selectGoPeriod = this.declareGoPeriod
**.udpApp[0].switchDhcpPeriod = this.sendInterval * 2
**.udpApp[0].tearDownPeriod = this.switchDhcpPeriod * 5


# DHCP client for devices running as GMs/PMs (bound to wlan2 for GMs and is switched wlan3 in case of PMs)
**.udpApp[1].typename = "DHCPClient"
**.udpApp[1].interface = "wlan2"
**.udpApp[1].startTime = 10s

# DHCP server for devices running as GOs (bound to interface wlan1) 
**.udpApp[2].typename = "DHCPServer"
**.udpApp[2].interface = "wlan1"
**.udpApp[2].startTime = 10s
**.udpApp[2].subnetMask = "255.255.255.0"
**.udpApp[2].ipAddressStart = "192.168.0.10"
**.udpApp[2].maxNumClients = 100
**.udpApp[2].gateway = "192.168.0.1"
**.udpApp[2].dns = "192.168.0.1"
**.udpApp[2].leaseTime = 200s

#TCP Apps
**.numTcpApps = 2
**.tcpApp[0].typename = "TCPMgmtSrvApp"

**.tcpApp[1].typename = "TCPMgmtClientApp"
