[General]
sim-time-limit = 100s

[Config Test1]
network = inet.examples.mytests.Test1
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 600m
**.constraintAreaMaxY = 400m
**.constraintAreaMaxZ = 0m

# channel physical parameters
**.mgmt.numChannels = 5

# access point
**.ap.wlan[*].mac.address = "10:00:00:00:00:00"
**.ap.wlan[*].mgmt.ssid = "AP1"
**.ap.wlan[*].mgmt.beaconInterval = 100ms
**.wlan[*].mgmt.numAuthSteps = 4

**.mgmt.frameCapacity = 10

# mobility
**.mobility.initFromDisplayString = true
**.host*.mobilityType = "LinearMobility"
**.host*.mobility.speed = 10mps
**.host*.mobility.angle = 0
**.host*.mobility.acceleration = 0
**.host*.mobility.updateInterval = 100ms

# wireless channels
**.ap.wlan[*].radio.channelNumber = 2
**.host*.wlan[*].radio.channelNumber = 0  # just initially -- it'll scan

# wireless configuration
**.wlan*.bitrate = 11Mbps

**.wlan[*].agent.activeScan = true
**.wlan[*].agent.default_ssid = ""
**.wlan[*].agent.channelsToScan = ""  # "" means all
**.wlan[*].agent.probeDelay = 0.1s
**.wlan[*].agent.minChannelTime = 0.15s
**.wlan[*].agent.maxChannelTime = 0.3s
**.wlan[*].agent.authenticationTimeout = 5s
**.wlan[*].agent.associationTimeout = 5s

**.mac.address = "auto"
**.mac.maxQueueSize = 14
**.mac.rtsThresholdBytes = 4000B
**.wlan[*].mac.retryLimit = 7
**.wlan[*].mac.cwMinData = 7
**.wlan[*].mac.cwMinBroadcast = 31

**.radio.transmitter.power = 2.0mW


#==============================================================================
[Config WirelessDHCP]
description = Wireless hosts configured via DHCP

network = inet.examples.mytests.Test2
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 600m
**.constraintAreaMaxY = 400m
**.constraintAreaMaxZ = 0m

# channel physical parameters
**.mgmt.numChannels = 5

# access point
**.ap.wlan[*].mgmt.encapDecap = "true" 
**.ap.wlan[*].mgmtType = "Ieee80211MgmtAP"
**.ap.wlan[*].mac.address = "10:00:00:00:00:00"
**.ap.wlan[*].mgmt.ssid = "AP1"
**.ap.wlan[*].mgmt.beaconInterval = 100ms
**.wlan[*].mgmt.numAuthSteps = 4


# mobility
**.mobility.initFromDisplayString = true
**.host*.mobilityType = "LinearMobility"
**.host*.mobility.speed = 10mps
**.host*.mobility.angle = 0
**.host*.mobility.acceleration = 0
**.host*.mobility.updateInterval = 100ms

# wireless channels
**.ap.wlan[*].radio.channelNumber = 2
**.host*.wlan[*].radio.channelNumber = 0  # just initially -- it'll scan

# wireless configuration
**.wlan*.bitrate = 11Mbps

**.wlan[*].agent.activeScan = true
**.wlan[*].agent.default_ssid = ""
**.wlan[*].agent.channelsToScan = ""  # "" means all
**.wlan[*].agent.probeDelay = 0.1s
**.wlan[*].agent.minChannelTime = 0.15s
**.wlan[*].agent.maxChannelTime = 0.3s
**.wlan[*].agent.authenticationTimeout = 5s
**.wlan[*].agent.associationTimeout = 5s

**.mac.address = "auto"
**.mac.maxQueueSize = 14
**.mac.rtsThresholdBytes = 4000B
**.wlan[*].mac.retryLimit = 7
**.wlan[*].mac.cwMinData = 7

**.radio.transmitter.power = 2.0mW

**.configurator.config = xml("<config><interface hosts='**ap**' names='*wlan*' address='192.168.0.x' netmask='255.255.255.0'/></config>")

# DHCP client in the wireless hosts
**.host*.numUdpApps = 1
**.host*.udpApp[0].typename = "DHCPClient"
**.host*.udpApp[0].interface = "wlan0"
**.host*.numPingApps = 1
**.host*.pingApp[0].destAddr = "ap"
**.host*.pingApp[0].startTime = 3s

# DHCP server for the wireless network 
**.ap.numUdpApps = 1
**.ap.udpApp[0].typename = "DHCPServer"
**.ap.udpApp[0].subnetMask = "255.255.255.0"
**.ap.udpApp[0].ipAddressStart = "192.168.0.10"
**.ap.udpApp[0].maxNumClients = 100
**.ap.udpApp[0].gateway = "192.168.0.1"
**.ap.udpApp[0].dns = "192.168.0.1"
**.ap.udpApp[0].leaseTime = 100s


#==============================================================================
[Config AdhocServiceDiscovery]
description = WFD Service discovery implementation through adhoc networking
network = Test3

*.host*.networkLayer.arpType = "GlobalARP"

*.host*.numUdpApps = 2
*.host*.udpApp[0].typename = "UDPBasicApp"
*.host*.udpApp[0].destAddresses = "255.255.255.255"
#*.host*.udpApp[0].localPort = 5000
*.host*.udpApp[0].destPort = 5000
*.host*.udpApp[0].messageLength = 1000B
*.host*.udpApp[0].sendInterval = exponential(12ms)
*.hostA.udpApp[0].packetName = "UDPDataA"
*.hostB.udpApp[0].packetName = "UDPDataB"
*.hostC.udpApp[0].packetName = "UDPDataC"

*.host*.udpApp[1].typename = "UDPSink"
*.host*.udpApp[1].localPort = 5000
*.host*.udpApp[1].receiveBroadcast = true

*.host*.networkLayer.ip.forceBroadcast = true
*.configurator.config = xml("<config><interface hosts='**' names='*wlan*' address='1.x.x.x' netmask='255.0.0.0'/></config>")

*.host*.wlan[0].typename = "IdealWirelessNic"
*.host*.wlan[0].mac.useAck = false
*.host*.wlan[0].mac.fullDuplex = false
*.host*.wlan[0].radio.transmitter.communicationRange = 100m
*.host*.wlan[0].radio.receiver.ignoreInterference = true

*.host*.**.bitrate = 1Mbps

*.host*.wlan[0].radio.energyConsumerType = "StateBasedEnergyConsumer"
*.host*.wlan[0].radio.energyConsumer.offPowerConsumption = 0mW
*.host*.wlan[0].radio.energyConsumer.sleepPowerConsumption = 1mW
*.host*.wlan[0].radio.energyConsumer.switchingPowerConsumption = 1mW
*.host*.wlan[0].radio.energyConsumer.receiverIdlePowerConsumption = 2mW
*.host*.wlan[0].radio.energyConsumer.receiverBusyPowerConsumption = 5mW
*.host*.wlan[0].radio.energyConsumer.receiverReceivingPowerConsumption = 10mW
*.host*.wlan[0].radio.energyConsumer transmitterIdlePowerConsumption = 2mW
*.host*.wlan[0].radio.energyConsumer.transmitterTransmittingPowerConsumption = 100mW

*.host*.energyStorageType = "IdealEnergyStorage"

*.visualizer.sceneVisualizer.descriptionFigure = "title"
*.visualizer.mediumVisualizer.displaySignals = true
*.visualizer.mediumVisualizer.signalPropagationUpdateInterval = 100ns
*.host*.wlan[0].radio.displayCommunicationRange = true
*.visualizer.dataLinkVisualizer.packetNameFilter = "UDPData*"
*.visualizer.networkRouteVisualizer.packetNameFilter = "UDPData*"


#==============================================================================
[Config AdhocServiceDiscovery2]
description = WFD Service discovery implementation through adhoc networking
network = Test3

*.host*.networkLayer.arpType = "GlobalARP"

*.host*.numUdpApps = 1
*.host*.udpApp[0].typename = "UDPBasicApp"
*.host*.udpApp[0].destAddresses = "255.255.255.255"
*.host*.udpApp[0].localPort = 5000
*.host*.udpApp[0].destPort = 5000
*.host*.udpApp[0].messageLength = 1000B
*.host*.udpApp[0].sendInterval = exponential(120ms)
*.host*.udpApp[0].receiveBroadcast = true
*.hostA.udpApp[0].packetName = "UDPDataA"
*.hostB.udpApp[0].packetName = "UDPDataB"
*.hostC.udpApp[0].packetName = "UDPDataC"

#*.host*.networkLayer.ip.forceBroadcast = true
*.configurator.config = xml("<config><interface hosts='**' names='*wlan*' address='1.x.x.x' netmask='255.0.0.0'/></config>")

*.host*.wlan[0].typename = "IdealWirelessNic"
*.host*.wlan[0].mac.useAck = false
*.host*.wlan[0].mac.fullDuplex = false
*.host*.wlan[0].radio.transmitter.communicationRange = 100m
*.host*.wlan[0].radio.receiver.ignoreInterference = true

*.host*.**.bitrate = 1Mbps

*.host*.wlan[0].radio.energyConsumerType = "StateBasedEnergyConsumer"
*.host*.wlan[0].radio.energyConsumer.offPowerConsumption = 0mW
*.host*.wlan[0].radio.energyConsumer.sleepPowerConsumption = 1mW
*.host*.wlan[0].radio.energyConsumer.switchingPowerConsumption = 1mW
*.host*.wlan[0].radio.energyConsumer.receiverIdlePowerConsumption = 2mW
*.host*.wlan[0].radio.energyConsumer.receiverBusyPowerConsumption = 5mW
*.host*.wlan[0].radio.energyConsumer.receiverReceivingPowerConsumption = 10mW
*.host*.wlan[0].radio.energyConsumer transmitterIdlePowerConsumption = 2mW
*.host*.wlan[0].radio.energyConsumer.transmitterTransmittingPowerConsumption = 100mW

*.host*.energyStorageType = "SimpleEnergyStorage"
*.host*.energyStorage.nominalCapacity = 8000J
*.host*.energyStorage.initialCapacity = uniform(4000J, 8000J)

*.visualizer.sceneVisualizer.descriptionFigure = "title"
*.visualizer.mediumVisualizer.displaySignals = true
*.visualizer.mediumVisualizer.signalPropagationUpdateInterval = 100ns
*.host*.wlan[0].radio.displayCommunicationRange = true
*.visualizer.dataLinkVisualizer.packetNameFilter = "UDPData*"
*.visualizer.networkRouteVisualizer.packetNameFilter = "UDPData*"

#==============================================================================
[Config ParameterPassing]
description = Pass parameteres between different layers in the node
network = Test4


*.host*.networkLayer.arpType = "GlobalARP"

*.host*.numUdpApps = 1
*.host*.udpApp[0].typename = "UDPWFDServiceDiscovery"
*.host*.udpApp[0].destAddresses = "255.255.255.255"
*.host*.udpApp[0].localPort = 5000
*.host*.udpApp[0].destPort = 5000
*.host*.udpApp[0].messageLength = 1000B
*.host*.udpApp[0].sendInterval = exponential(120ms)
*.host*.udpApp[0].receiveBroadcast = true
*.hostA.udpApp[0].packetName = "UDPDataA"
*.hostB.udpApp[0].packetName = "UDPDataB"
*.hostC.udpApp[0].packetName = "UDPDataC"


#==============================================================================
[Config TCP_Connections]
description = TCP connection between devices
network = Test3


*.host*.networkLayer.arpType = "GlobalARP"

*.host*.numTcpApps = 2
*.host*.tcpApp[0].typename = "TCPBasicClientApp"
*.host*.tcpApp[1].typename = "TCPGenericSrvApp"
*.host*.tcpApp[0].startTime = uniform(100ms, 600ms)
*.hostA.tcpApp[0].connectAddress = "hostB"
*.hostA.tcpApp[0].thinkTime = 1s
*.hostA.tcpApp[0].idleInterval = 2s
*.hostB.tcpApp[0].connectAddress = "hostC"
*.hostB.tcpApp[0].thinkTime = 1s
*.hostB.tcpApp[0].idleInterval = 2s
*.hostC.tcpApp[0].connectAddress = "hostA"
*.hostC.tcpApp[0].thinkTime = 1s
*.hostC.tcpApp[0].idleInterval = 2s

*.configurator.config = xml("<config><interface hosts='**' names='*wlan*' address='1.x.x.x' netmask='255.0.0.0'/></config>")

*.host*.wlan[0].typename = "IdealWirelessNic"
*.host*.wlan[0].mac.useAck = false
*.host*.wlan[0].mac.fullDuplex = false
*.host*.wlan[0].radio.transmitter.communicationRange = 100m
*.host*.wlan[0].radio.receiver.ignoreInterference = true

*.host*.**.bitrate = 1Mbps

*.visualizer.sceneVisualizer.descriptionFigure = "title"
*.visualizer.mediumVisualizer.displaySignals = true
*.visualizer.mediumVisualizer.signalPropagationUpdateInterval = 100ns
*.host*.wlan[0].radio.displayCommunicationRange = true